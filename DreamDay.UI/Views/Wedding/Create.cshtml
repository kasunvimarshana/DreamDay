@using DreamDay.Models.ViewModels
@model WeddingViewModel

@{
    // var title = ViewContext.RouteData.Values["action"].ToString();
    ViewData["Title"] = "Create Wedding";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="WeddingDate" class="form-label"></label>
        <input asp-for="WeddingDate" class="form-control" type="date" />
        <span asp-validation-for="WeddingDate" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="VenueId" class="control-label">Venue</label>
        <select asp-for="VenueId" class="form-control" asp-items="ViewBag.VenueId">
            <option value="">-- Select Venue --</option>
        </select>
    </div>

    <div class="form-group mb-3">
        <label asp-for="OwnerId" class="control-label">Owner</label>
        <select asp-for="OwnerId" class="form-control" asp-items="ViewBag.OwnerId">
            <option value="">-- Select Owner --</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@* <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Form validation enhancement
        const form = document.querySelector('form');
        form.addEventListener('submit', function(e) {
            // Additional client-side validation can be added here
            const requiredFields = form.querySelectorAll('[data-val-required]');
            let isValid = true;

            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    isValid = false;
                    field.classList.add('is-invalid');
                } else {
                    field.classList.remove('is-invalid');
                }
            });

            if (!isValid) {
                e.preventDefault();
                window.scrollTo(0, 0);
            }
        });
    });
</script> *@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
